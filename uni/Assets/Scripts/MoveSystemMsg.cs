using Fungus;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class MoveSystemMsg : MonoBehaviour
{/*
    public List<string> sysList = new List<string>();
    public List<int> sysX = new List<int>();
    public List<int> sysY = new List<int>();

    public Flowchart flowchart;
    Vector3 sysPos;

    //public GameObject systemTxtObj;
    public GameObject systemPanel;
    public Text systemTxt;
    public GameObject systemTxtM;
*/
    // Start is called before the first frame update
    void Start()
    {
        /*sysList.Add("현재 자신이 해야하는 퀘스트가 상단에 보입니다");
        sysX.Add(1600); sysY.Add(-300);
        sysList.Add("캐릭터를 클릭하면 대화를 나눌 수 있습니다");
        sysList.Add("탐정일지에 캐릭터가 추가되었습니다. 탐정일지에는 캐릭터와 사건이 설명되어 있습니다. 탐정일지를 눌러주세요");
        sysList.Add("다른 탭으로 이동할 수 있습니다");
        sysList.Add("메인화면으로 돌아갈 수 있습니다");
        sysList.Add("다른 탭으로 이동할 수 있습니다");
        sysList.Add("캐릭터를 눌러보세요! 캐릭터에 대한 자세한 정보를 알 수 있습니다.");
        sysList.Add("클릭하면 진행한 대사들이 순차적으로 보여집니다. 대사창을 눌러보세요");
        sysList.Add("내가 오늘하루 정리해보자에서 현성이에게 베부한 아이템만 담겨져 있고, 아이템에 대한 설명이 써져있다.");
        sysList.Add("기억 조각을 눌러보세요");
        sysList.Add("기억 재생되었던 장면이 시간 순서대로 지정됩니다.");
        sysList.Add("획득한 아이템이 저장되어 있습니다");
        sysList.Add("슬라이드를 열어 아이템창을 볼 수 있습니다");
        sysList.Add("맵이 열렸습니다! 이제는 기숙학원의 모든 공간을 돌아다닐 수 있습니다!");
        sysList.Add("USB를 두 번 클릭하면 사용할 수 있어!");
        sysList.Add("USB를 컴퓨터에 가져가보자!");
        sysList.Add("아이템 창에서 아이템을 친구들에게 옮길 수 있어!");
        sysList.Add("모든 정답을 다 맞추면 save버튼을 누르고 다음으로 넘어가보자!");
        sysList.Add("좌우를 스크롤 해서 증거품을 수집하세요! 모든 증거품을 찾아야 합니다!");
        */
        //sysPos = transform.position;
        //systerTxtM = GameObject.Find("SystemMessage_시스템메시지");
    }

    // Update is called once per frame
    void Update()
    {
        //int systemNum = flowchart.GetIntegerVariable("systemNum");
        //Transform sp = flowchart.GetTransformVariable("systemPos");
        //sp = (1600);// sysX[systemNum];
        //sp.y = -300;// sysY[systemNum];
        //systemTxtM.transform.position = sysPos;
        //systemTxt.text = sysList[systemNum];
        /*if (systemNum > 50)
        {
            //systemTxtObj.SetActive(false);
            systemPanel.SetActive(false);
            systemTxtM.SetActive(false);

        }
        else
        {
            //systemTxtObj.SetActive(true);
            systemPanel.SetActive(true);
            sysPos.x = sysX[systemNum]; sysPos.y = sysY[systemNum];
            systemTxtM.transform.position = sysPos;
            systemTxt.text = sysList[systemNum];
        }*/
        
        
            
    }
}
